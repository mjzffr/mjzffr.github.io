<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Maja Z. Frydrychowicz</title><link href="http://majazf.ca/blog/" rel="alternate"></link><link href="http://majazf.ca/blog/feeds/all.atom.xml" rel="self"></link><id>http://majazf.ca/blog/</id><updated>2014-07-01T00:00:00-04:00</updated><entry><title>Open Source Bridge 2014</title><link href="http://majazf.ca/blog/osb14.html" rel="alternate"></link><updated>2014-07-01T00:00:00-04:00</updated><author><name>Maja Z. Frydrychowicz</name></author><id>tag:majazf.ca,2014-06-30:blog/osb14.html</id><summary type="html">&lt;p&gt;Open Source Bridge 2014 was my first conference experience in about 5 years and my first non-academic conference. It had a great mix of talks and was thoughtfully organized and super friendly. I learned about Firefox quality assurance, communication strategies, remote work, discrimination in the tech industry and being a better human. That mix could have been totally different though: during almost every session, there were 3-4 interesting talks competing for my attention, which is a good thing.&lt;/p&gt;
&lt;p&gt;Attendees were welcome to help out with conference logistics and encouraged to organize spontaneous, open meetings. For example, I spent a couple of hours volunteering as session chair, which amounts to helping each speaker set up for their talk, introducing them and giving them timing cues. &lt;/p&gt;
&lt;p&gt;Liz and I also set up a table at the conference Hacker Lounge to &lt;a href="http://majazf.ca/blog/one-and-done-osbrige.html"&gt;introduce potential contributors to Firefox quality assurance and One and Done&lt;/a&gt;. We ended up supporting four people as they each set up a development environment for our project. As expected, each participant ran into snags along the way with things like database configuration so it was good to work on this in a group. &lt;/p&gt;
&lt;p&gt;It felt awesome to share my recent experience and speed up their setup process. I think the fact that One and Done is my first Django project helped a lot: when someone is new to a project, having expert mentors is great but in many cases it's much easier to pose questions and relate to someone who is just a bit less of a beginner than you are. &lt;/p&gt;
&lt;p&gt;That particular Hacker Lounge session got me thinking about how easy it is for potential FOSS contributors to get discouraged by setup alone. A good readme is priceless! The &lt;a href="https://github.com/mjzffr/oneanddone/blob/master/README.md"&gt;One and Done readme&lt;/a&gt; is quite detailed and helpful, but we will likely add a setup guide or dev FAQ to the projet wiki for additional support. It's silly for someone to miss out on contributing just because they get mysterious errors while installing mysql! &lt;/p&gt;
&lt;h1&gt;Firefox Quality Assurance&lt;/h1&gt;
&lt;p&gt;This conference happened to be an opportunity for me to work and talk in person with Liz for the first time during my OPW internship. In addition to discussing additions to One and Done, Liz gave me a nice overview of how Firefox features and bug fixes get tested and gradually make their way through a series of release channels: from Nightly, to Aurora, then Beta, then a real release. We looked through this &lt;a href="https://wiki.mozilla.org/Releases/Firefox_31/Test_Plan"&gt;Firefox 31 Test Plan&lt;/a&gt; and talked about the supporting tools used by the QA team.&lt;/p&gt;
&lt;p&gt;Many of these tools are actually developed by Mozilla and there was a really nice talk at this year's Open Source Bridge about one such tool, Socorro, which is used for &lt;a href="http://www.opensourcebridge.org/sessions/1319"&gt;Firefox crash reporting and analysis&lt;/a&gt;. Fun facts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you go to &lt;code&gt;about:crashes&lt;/code&gt; in Firefox, you can easily access the &lt;a href="https://crash-stats.mozilla.com/"&gt;crash reports&lt;/a&gt; you've submitted and see whether anyone is working on the associated bug(s).&lt;/li&gt;
&lt;li&gt;Socorro stores about 3 months worth of crash reports (3-5 million crashes per day!) and those crashes are initially sent to file system storage rather  than a database. Why? A file system has better up-time than a database.&lt;/li&gt;
&lt;li&gt;To access any particular crash quickly on that file system, a &lt;a href="http://www.twobraids.com/2012/12/socorro-file-system-storage.html"&gt;radix storage scheme&lt;/a&gt; is implemented with &lt;strong&gt;symbolic links&lt;/strong&gt;. Cool. (You can't just store thousands of files in one directory -- file access would be ridiculously slow.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those points refer to just one component of Socorro -- there's all kinds of other neat stuff about it.&lt;/p&gt;
&lt;h1&gt;Selected Talks&lt;/h1&gt;
&lt;p&gt;Some of the talks I attended, like the one about Socorro, related quite closely to my current internship with Mozilla.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Roan Kattouw showed us surprising and bizarre browser &lt;a href="http://www.opensourcebridge.org/sessions/1247"&gt;rendering bugs&lt;/a&gt; that he discovered while working on the &lt;a href="http://www.mediawiki.org/wiki/VisualEditor"&gt;Visual Editor&lt;/a&gt; for Wikimedia.&lt;/li&gt;
&lt;li&gt;As it turns out, lots of people are as &lt;a href="http://majazf.ca/blog/remote-work.html"&gt;ambivalent about remote work&lt;/a&gt; as I am, and we all flocked to two talks about how great it is to work on a distributed team. Handy tips for remote work: &lt;a href="http://www.opensourcebridge.org/sessions/1244"&gt;overcommunicate&lt;/a&gt; and &lt;a href="http://www.opensourcebridge.org/sessions/1278"&gt;always assume good faith in text communication&lt;/a&gt;. I feel hopeful.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other talks helped me think about my future career path in the tech industry and the open source community. Unexpected bonus: many of these talks caused me to reflect about diversity and bias in our field.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The way Julie Pagano described &lt;a href="http://www.opensourcebridge.org/sessions/1185"&gt;impostor syndrome&lt;/a&gt; really hit home: "People with impostor syndrome do not share knowledge, collaborate, help with OSS, apply for jobs. [They] start small, remain small, end up small." &lt;/li&gt;
&lt;li&gt;In a talk on &lt;a href="http://www.opensourcebridge.org/sessions/1394"&gt;negotiation&lt;/a&gt;, I learned how important it is to practice silence and pause: if you don't feel informed enough to make a decision, focus on getting your questions answered. It sounds obvious but it's hard to do in the moment! Similarly, another talk about &lt;a href="http://www.opensourcebridge.org/sessions/1291"&gt;influence&lt;/a&gt; described how to identify and respond to different communication styles and how to pay attention to the people around us.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://franceshocutt.com/2014/07/01/why-are-these-people-following-me-leadership-for-the-introverted-uncertain-and-astonished/"&gt;Frances Hocutt's keynote&lt;/a&gt; is filled with so much awesome. Go listen to it now. Here's one of my favourite parts:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Leadership is learned, and learning requires vulnerability, and
vulnerability depends on the safety to be vulnerable. And our communities are
demonstrably unsafe. We are artificially limiting our pool of leaders. [...]
We create shame around ignorance. We devalue social and emotional
skills. [...] We devalue lived experience and natural variation, and 
in its place,
we raise up a false and impossible impartiality, which ends hurting
us all. We experience incompetent and unethical leadership, and
instead of learning to lead better we devalue the idea of leadership.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;A Delighful Conference Experience&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;All the food was vegetarian, most of it was vegan. I eat meat but I didn't miss it at all. It somehow added to the nice atmosphere that everyone could eat everything. &lt;/li&gt;
&lt;li&gt;The attendee badges were actually booklets that contained the conference schedule and the code of conduct. One's name appears on each side of the booklet, so no problem with flipped badges. The lanyards for the badges were colour-coded so you can easily tell who is ok with being photographed and who is not. &lt;/li&gt;
&lt;li&gt;There was a quiet room! So nice for overwhelmed introverts like me. Being around people is exhausting. :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The way the conference was organized was considerate, inclusive and thoughtful. I hope to go back in future years. &lt;/p&gt;</summary><category term="mozilla"></category><category term="foss"></category><category term="opw"></category><category term="event"></category></entry><entry><title>"One and Done" comes to Open Source Bridge 2014!</title><link href="http://majazf.ca/blog/one-and-done-osbrige.html" rel="alternate"></link><updated>2014-06-20T17:58:00-04:00</updated><author><name>Maja Z. Frydrychowicz</name></author><id>tag:majazf.ca,2014-06-20:blog/one-and-done-osbrige.html</id><summary type="html">&lt;p&gt;So, you want to contribute to Mozilla somehow, but you're not sure where to start or who to talk to. (I felt that way just a few months ago; the anguish is still fresh in my mind.) Fortunately, there's a tool called &lt;a href="https://oneanddone.mozilla.org"&gt;One and Done&lt;/a&gt; that can help you complete your first contributions. But wait, there's more...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can drop by the &lt;strong&gt;Hacker Lounge&lt;/strong&gt; at &lt;a href="http://www.opensourcebridge.org"&gt;Open Source Bridge&lt;/a&gt; to get started with contributions to Mozilla through One and Done, or get started with development of new One and Done features! I'll be there with &lt;a href="https://twitter.com/lizhenry"&gt;Liz&lt;/a&gt;, my &lt;a href="https://gnome.org/opw/"&gt;OPW&lt;/a&gt; internship mentor, on the evening of &lt;strong&gt;Wednesday, June 25th&lt;/strong&gt; to guide you and answer questions. Beginners welcome!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I've been helping out with the development of One and Done for a few weeks now, and it's great fun. The tool aims to connect new Mozilla contributors to specific tasks according to their interests, skills and available time. It also allows you to keep a record of your accomplishments at Mozilla. We have a lot more planned for it, and if you know Python and want to learn Django, you can help us add new features.&lt;/p&gt;
&lt;h1&gt;What to Expect at the Hacker Lounge&lt;/h1&gt;
&lt;p&gt;We have two main activities that we'll be helping out with. &lt;/p&gt;
&lt;h2&gt;Use One and Done to Make Contributions to Mozilla&lt;/h2&gt;
&lt;p&gt;Dive right into your (first?) Mozilla contribution. You'll create a One and Done profile, pick some tasks that interest you and record your progress. If you run into any snags, we'll be there to help you out or show you how to engage with project teams through IRC, mailing lists and so on. &lt;/p&gt;
&lt;p&gt;If you have suggestions for how to make One and Done more useful or if you encounter a bug in the tool, we'll show you how to use Bugzilla to share your feedback with the One and Done team.&lt;/p&gt;
&lt;h2&gt;Work on One and Done as a Python Developer&lt;/h2&gt;
&lt;p&gt;There's lots to do if you want to work on One and Done itself. It's essentially a Django project and a nice example of how web development is done at Mozilla. The &lt;a href="https://github.com/mozilla/oneanddone"&gt;One and Done source code&lt;/a&gt; is hosted on Github.&lt;/p&gt;
&lt;p&gt;I'll be happy to help you set up your development environment and build the project. Not a Github person yet? That's ok, I can help with that, too. :) We can chat about the project structure and some Django basics, as well as where to find project requirements and how to use Bugzilla to collaborate with the One and Done team.&lt;/p&gt;</summary><category term="mozilla"></category><category term="foss"></category><category term="opw"></category><category term="event"></category></entry><entry><title>Project Management at Mozilla</title><link href="http://majazf.ca/blog/bugzilla-github.html" rel="alternate"></link><updated>2014-06-18T00:00:00-04:00</updated><author><name>Maja Z. Frydrychowicz</name></author><id>tag:majazf.ca,2014-06-05:blog/bugzilla-github.html</id><summary type="html">&lt;p&gt;One of the most interesting aspects of my &lt;a href="https://wiki.gnome.org/OutreachProgramForWomen"&gt;OPW&lt;/a&gt; internship is learning how contributions and planning are managed in Mozilla projects. So huge! So many contributors! Ahhh! Mozilla is known for giant projects like Firefox, but it also builds lots of supporting tools and websites. All projects, big and small, are managed using Bugzilla and often a mix of other tools, depending on the project team. My observations are based mostly on one project that I've become familiar with: &lt;a href="https://github.com/mozilla/oneanddone"&gt;One and Done&lt;/a&gt;. Warning: I'm going to say "Bugzilla" a lot.&lt;/p&gt;
&lt;h1&gt;Bugzilla&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://bugzilla.mozilla.org/"&gt;Bugzilla&lt;/a&gt; is used to describe "bugs" and track their status. A "bug" in Bugzilla in not necessarily a problem that needs to be fixed: it can be feature planned by the core project team, a suggestion from a community member, a representation of a project milestone or even a request for new office furniture for a team member. Seriously.&lt;/p&gt;
&lt;p&gt;Ideally, all the discussion about a bug takes place publicly in its Comments section on Bugzilla so that everyone can see how the bug is evolving and anyone can join in. (Not all discussion is public: bugs that relate to a security vulnerability can only be viewed by authorized users.)&lt;/p&gt;
&lt;p&gt;If the bug represents a new feature, people might use the Comments section to narrow down or adjust requirements, request clarification or feedback, etc. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1020981"&gt;Example 1: Profile button bug&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1005082"&gt;Example 2: Front page header text bug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bugzilla is also where developers submit solutions for &lt;a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/How_to_Submit_a_Patch#Getting_the_patch_reviewed"&gt;code review&lt;/a&gt;. &lt;/p&gt;
&lt;h1&gt;Bugzilla with Github&lt;/h1&gt;
&lt;p&gt;Like many other Mozilla projects, One and Done has its repository hosted on Github. Github Issues are not used at all since Bugzilla bugs fulfill their role. When a developer makes a pull request on Github, that PR should refer a Bugzilla bug ID and it should be &lt;a href="http://globau.wordpress.com/2013/10/21/github-pull-requests-and-bugzilla/"&gt;attached to the bug&lt;/a&gt; in Bugzilla with a request for review. (&lt;a href="https://github.com/mozilla/oneanddone/pull/124"&gt;Example 3: Completed Tasks PR&lt;/a&gt;.) One can also add a brief summary of the PR in the bug comments. Detailed discussion and feedback about the code takes place in the pull request on Github, but a summary thereof is always included in Bugzilla, often by the reviewer. &lt;/p&gt;
&lt;h1&gt;One Source of Information&lt;/h1&gt;
&lt;p&gt;Since there are so many tools available to describe and communicate about project progress, it's a common problem to have project information spread around in many different places, where it may be overlooked or become out-of-date. &lt;/p&gt;
&lt;p&gt;In the case of One and Done, although there is a &lt;a href="https://wiki.mozilla.org/QA/OneandDone"&gt;project wiki&lt;/a&gt;, a &lt;a href="https://github.com/mozilla/oneanddone"&gt;Github repo&lt;/a&gt;, a &lt;a href="https://mozilla.kanbanery.com/projects/45827/board/?key=fe86e00cb6c613df344772a58b72bd92a0f38995"&gt;Kanban board&lt;/a&gt; and brief discussion over IRC and email,  all the key project data is in Bugzilla or linked-to from there. As a contributor to the project, there's really only one place I need to look for definitive information, and that's Bugzilla. Bugzilla, Bugzilla, Bugzilla.&lt;/p&gt;</summary><category term="mozilla"></category><category term="foss"></category></entry><entry><title>Working Remotely is... Hard? Different? Strange?</title><link href="http://majazf.ca/blog/remote-work.html" rel="alternate"></link><updated>2014-05-23T15:30:00-04:00</updated><author><name>Maja Z. Frydrychowicz</name></author><id>tag:majazf.ca,2014-05-23:blog/remote-work.html</id><summary type="html">&lt;p&gt;My internship with Mozilla involves work within a team whose members are located around the world and not where I am. Some are Mozilla employees or maybe contractors, some are interns like me, some might be volunteers. The key point is that it's not just me with my mentor, focused on our own area: I need to find my voice in this in group of people, and that's where working remotely gets hard. &lt;/p&gt;
&lt;p&gt;My very initial, tentative impressions of full-time, remote work is that it's not bad, but it takes more getting used to than I expected. I've worked from home a lot, as a developer and as a teacher, but I've only ever collaborated on projects with people that I spend time with "at the office" or that I meet with in person from time to time. My current full-time, remote status makes me realize that chatting and getting to know coworkers between bursts of productivity is pretty valuable! Crazy! Time for me to refer you to &lt;a href="http://theoatmeal.com/comics/working_home"&gt;Why working from home is both awesome and horrible&lt;/a&gt;.&lt;/p&gt;</summary><category term="opw"></category><category term="mozilla"></category><category term="foss"></category><category term="feelings"></category></entry><entry><title>Dive In! Applying to the FOSS Outreach Program for Women</title><link href="http://majazf.ca/blog/applying-to-opw.html" rel="alternate"></link><updated>2014-05-13T13:00:00-04:00</updated><author><name>Maja Z. Frydrychowicz</name></author><id>tag:majazf.ca,2014-05-13:blog/applying-to-opw.html</id><summary type="html">&lt;p&gt;I just started an internship with Mozilla's &lt;a href="https://quality.mozilla.org/"&gt;Quality Assurance&lt;/a&gt; team as part of the GNOME Foundation's &lt;a href="https://gnome.org/opw/"&gt;Outreach Program for Women&lt;/a&gt; (OPW), but I almost didn't even apply! In fact, I had decided &lt;em&gt;not&lt;/em&gt; to apply for silly reasons, and then a week before the &lt;em&gt;extended&lt;/em&gt; deadline I abruptly changed my mind -- after some encouragement from the wonderful people at my &lt;a href="https://www.hackerschool.com/"&gt;Hacker School&lt;/a&gt; batch. (As it happens, I almost didn't apply to Hacker School either. This is a pattern.)&lt;/p&gt;
&lt;p&gt;Of course, I'm very pleased that I did apply in the end, not just because I was ultimately selected for an internship but because the process itself was incredibly instructive. By the time I submitted my application, I felt like I could start contributing to Mozilla on my own regardless of whether I got an internship. &lt;/p&gt;
&lt;p&gt;Overcoming initial barriers is built into the OPW application process: I interacted with people on IRC and it was scary but productive and good; I posted to project mailing lists and it was scary but productive and good; I added information to bugs in Bugzilla, and it was scary but productive and good. You get the idea... I made mistakes sometimes, but I fixed them and nothing terrible happened and no one seemed to hate me.&lt;/p&gt;
&lt;h1&gt;Context&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Wait, what's this Outreach Program for Women?&lt;/em&gt; The GNOME Foundation and many others want more people who identify as women or genderqueer to be involved in contributions to free and open source software (FOSS). Awesome! So one thing GNOME does is organize payed internships with various FOSS organizations especially for this category of humans. To apply, the human in question must learn about the participating organizations and their available projects, choose one or more projects of interest, &lt;em&gt;interact with current contributors&lt;/em&gt; and &lt;em&gt;contribute something themselves&lt;/em&gt;. Depending on the project, one's application process might take a few weeks. The project descriptions indicate how you can get started with contributing, and you need to communicate with the project mentor about what you might work on during the application.&lt;/p&gt;
&lt;h1&gt;My Application Experience&lt;/h1&gt;
&lt;p&gt;I started working on my application a week before the deadline, and I spent 7 full days on my application, setting aside my other Hacker School projects during that time. By the deadline, I wasn't sure my contribution was substantial enough but I submitted what I had anyway. That being said, the process seems relatively flexible and varies across organizations. I could have expanded my contributions after the application deadline -- the reason I didn't boils down to other time constraints on my side.&lt;/p&gt;
&lt;p&gt;My application was for the &lt;a href="https://wiki.mozilla.org/GNOME_Outreach_Summer2014#Mozilla_Bug_Wrangler_.28Desktop_QA.29"&gt;Bug Wrangler&lt;/a&gt; internship with Mozilla. When I contacted the designated mentor, Liz (&lt;a href="https://twitter.com/lizhenry"&gt;@lhenry&lt;/a&gt;), I explained that I'm more interested in the software development aspects of the position, and she suggested some more specific projects based on that. &lt;/p&gt;
&lt;p&gt;At that point, I only had a few days left to make a contribution to the project in question, so I focused on gaining experience with tasks related to the bug life-cycle at Mozilla: reproducing and adding information to unconfirmed bugs in &lt;a href="https://bugzilla.mozilla.org/"&gt;Bugzilla&lt;/a&gt;, testing the latest nightly build of Firefox to verify that bugs have been fixed, and so on. I also set up the development environment for a Django project I might work on during the internship. I managed to build the project and wanted to contribute something to it as part of my application, but I felt that I didn't have enough time to communicate with the project team before the application deadline. (I regret this; maybe I should have just jumped in.)&lt;/p&gt;
&lt;p&gt;Here are some examples of how I spent my time during the application process, &lt;strong&gt;aside from making my contributions and writing the application itself&lt;/strong&gt;. These small tasks add up, both in terms of time and in terms of making future contributions easier. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reading&lt;/strong&gt;, so much panic and reading. Things I read or skimmed: project descriptions, contributor/tool guides/documentation, Bugzilla terminology and Firefox/Mozilla components, bug reports, pull request discussions on Github, mailing-list archives, press releases, blog posts by past interns, project meeting minutes, IRC etiquette, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Setup and configuration&lt;/strong&gt;: registration with things like Bugzilla, IRC, Mozillians; choosing and setting up an IRC client; configuring a testing environment for Firefox.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communication&lt;/strong&gt; : emailing and chatting with the project mentor about available projects, my interests, and the application process; asking questions on IRC when I run into issues; I participated in a small video meeting during a Mozilla Test Day; introduced myself and asked for help on a couple of mailing lists.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learning&lt;/strong&gt; in preparation for more contributions: trying out the specific tools I might work on to gain a user perspective; reading about Django and building one of Mozilla's Django projects; setting up a database for it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My top tips for applying: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Communicate a lot. (I think that's almost the whole point.)&lt;/li&gt;
&lt;li&gt;Keep a brief, informal log of what you do as you do it. The log is handy for when you have questions later, when you come back to the project after a few weeks away, when you're writing your application, and so on.&lt;/li&gt;
&lt;li&gt;Don't assume there is some universally accepted, perfect approach to your task. There are grey areas. Example: how to classify a particular Firefox bug. So, do ask questions! Remember that "experts" ask questions, too, and interesting discussion among several helpful people many ensue, which is really cool. :)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'll say it again: the OPW internship application process is a great learning experience. Although I already knew a good amount about FOSS before I got started, I now have a much better sense for how a giant, open source project like Firefox grows and stays healthy. &lt;/p&gt;
&lt;p&gt;Do apply! Encourage others to apply! &lt;/p&gt;</summary><category term="mozilla"></category><category term="career"></category><category term="opw"></category><category term="foss"></category></entry></feed>